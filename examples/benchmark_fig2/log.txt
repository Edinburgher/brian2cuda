INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 1.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/brian_debug_96p9r25a.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/brian_script_294c4dcc.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 1.
Setting codefolder from command line to benchmark_fig2/code-2.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-2/brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/brian_debug_1yk8oxgr.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/brian_script_z0z41sxn.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 1.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_uvphyglv.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_q_6q3ktl.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 1.
Setting codefolder from command line to benchmark_fig2/code-2.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-2/brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_wbrtwjkz.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_pytfqnpm.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 1.
Setting codefolder from command line to benchmark_fig2/code-3.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-3/brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_b41yt9dp.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_b3bi9czr.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 2.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-2_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-2_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_qdcvc2gf.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_9366i0ll.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 2.
Setting codefolder from command line to benchmark_fig2/code-2.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-2_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-2/brunelhakim_M_joined_cuda_N-5000_M-2_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_9bnf02hr.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_qylx5v8u.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 2.
Setting codefolder from command line to benchmark_fig2/code-3.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-2_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-3/brunelhakim_M_joined_cuda_N-5000_M-2_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_oufc5zp_.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_09c13oj5.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 4.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-4_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-4_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_9svjayy6.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_rck_n0pw.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 4.
Setting codefolder from command line to benchmark_fig2/code-2.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-4_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-2/brunelhakim_M_joined_cuda_N-5000_M-4_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_oy9b_chh.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_ryeci1n2.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 4.
Setting codefolder from command line to benchmark_fig2/code-3.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-4_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-3/brunelhakim_M_joined_cuda_N-5000_M-4_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_pzk395km.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_xjde92vp.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 8.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-8_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-8_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_1e8ymjb8.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_d9m1vnth.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 8.
Setting codefolder from command line to benchmark_fig2/code-2.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-8_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-2/brunelhakim_M_joined_cuda_N-5000_M-8_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_h8489ee3.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_w45nl07_.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.02s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 8.
Setting codefolder from command line to benchmark_fig2/code-3.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-8_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-3/brunelhakim_M_joined_cuda_N-5000_M-8_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_xry0b9jq.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_tk7l1vf7.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 16.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-16_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-16_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_pt14e5lm.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_u3goycg1.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 16.
Setting codefolder from command line to benchmark_fig2/code-2.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-16_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-2/brunelhakim_M_joined_cuda_N-5000_M-16_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_p0176ftv.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_p34890aa.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 16.
Setting codefolder from command line to benchmark_fig2/code-3.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-16_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-3/brunelhakim_M_joined_cuda_N-5000_M-16_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug__4d7v11s.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_w9_m9g6b.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.02s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 32.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-32_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-32_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_gmd5bbk5.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_g6vjg4n_.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 32.
Setting codefolder from command line to benchmark_fig2/code-2.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-32_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-2/brunelhakim_M_joined_cuda_N-5000_M-32_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_kt8iyr6p.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_sf29gcdj.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 32.
Setting codefolder from command line to benchmark_fig2/code-3.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-32_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-3/brunelhakim_M_joined_cuda_N-5000_M-32_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_51malvpr.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_b66uzcjz.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 64.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-64_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-64_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/837551.1.cognition-all.q/brian_debug_i_9vg7ds.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/837551.1.cognition-all.q/brian_script_rlscaf5k.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
INFO       CUDA installation directory detected via location of `nvcc` binary: /usr/local/cuda [brian2.devices.cuda_standalone]
INFO       No numerical integration method specified for group 'neurongroup', using method 'euler' (took 0.03s, trying other methods took 0.00s). [brian2.stateupdaters.base.method_choice]
Setting M from command line to 1.
Setting codefolder from command line to benchmark_fig2/code-1.
Setting devicename from command line to cuda_standalone.
Setting duration from command line to 1.0.
Setting monitors from command line to False.
Setting openmp from command line to False.
Setting profiling from command line to True.
Setting resultsfolder from command line to benchmark_fig2/results.
running example brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
compiling model in benchmark_fig2/code-1/brunelhakim_M_joined_cuda_N-5000_M-1_profiling_no-monitors_PRMs_no-single-precision_no-openmp_duration-1.0_no-use-conditional-connect_partitions-None_atomics_bundle-mode_cognition13
STARTING connecting
ERROR      Brian 2 encountered an unexpected error. If you think this is a bug in Brian 2, please report this issue either to the discourse forum at <http://brian.discourse.group/>, or to the issue tracker at <https://github.com/brian-team/brian2/issues>. Please include this file with debug information in your report: /tmp/brian_debug_1h8i0phe.log  Additionally, you can also include a copy of the script that was run, available at: /tmp/brian_script_6j6jjeyn.py Thanks! [brian2]
Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 364, in _run_command_with_output
    output = subprocess.check_output(command_split, encoding='UTF-8')
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 424, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File "/cognition/home/marioki/miniconda3/lib/python3.9/subprocess.py", line 528, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['nvidia-smi', '-L']' returned non-zero exit status 255.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 387, in _get_available_gpus
    gpu_info_lines = _run_command_with_output(command).split("\n")
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 366, in _run_command_with_output
    raise RuntimeError(
RuntimeError: Running `nvidia-smi` failed with error code 255: Failed to initialize NVML: Driver/library version mismatch


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/cognition/home/marioki/brian2cuda/examples/brunelhakim_M_joined.py", line 175, in <module>
    network.run(duration, report='text', profile=params['profiling'])
  File "/cognition/home/marioki/brian2cuda/frozen_repos/brian2/brian2/core/base.py", line 276, in device_override_decorated_function
    return getattr(curdev, name)(*args, **kwds)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1692, in network_run
    self.build(direct_call=False, **self.build_options)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 1431, in build
    self.generate_main_source(self.writer)
  File "/cognition/home/marioki/brian2cuda/brian2cuda/device.py", line 688, in generate_main_source
    self.gpu_id, self.compute_capability = select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 121, in select_gpu
    gpu_id, compute_capability = _select_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 315, in _select_gpu
    gpu_id, compute_capability = get_best_gpu()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 534, in get_best_gpu
    gpu_list = get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 107, in get_available_gpus
    _gpu_selection["available_gpus"] = _get_available_gpus()
  File "/cognition/home/marioki/brian2cuda/brian2cuda/utils/gputools.py", line 397, in _get_available_gpus
    raise new_error from excepted_error
RuntimeError: Running `nvidia-smi -L` failed. This typically means that you have no NVIDIA driver installed. Are you sure there is an NVIDIA GPU on this machine?
