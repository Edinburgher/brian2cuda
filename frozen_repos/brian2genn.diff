diff --git a/brian2genn/device.py b/brian2genn/device.py
index f942a9c..aa71eb0 100644
--- a/brian2genn/device.py
+++ b/brian2genn/device.py
@@ -1791,9 +1791,9 @@ class GeNNDevice(CPPStandaloneDevice):
 
     def network_run(self, net, duration, report=None, report_period=10 * second,
                     namespace=None, profile=False, level=0, **kwds):
-        if profile is True:
-            raise NotImplementedError('Brian2GeNN does not yet support '
-                                      'detailed profiling.')
+        #if profile is True:
+        #    raise NotImplementedError('Brian2GeNN does not yet support '
+        #                              'detailed profiling.')
 
         if kwds:
             logger.warn(('Unsupported keyword argument(s) provided for run: '
@@ -1826,6 +1826,35 @@ class GeNNDevice(CPPStandaloneDevice):
         self.run_statement_used = True
 
 
+    def network_get_profiling_info(self, net):
+        fname = os.path.join(self.project_dir, 'test_output', 'test.time')
+        net._profiling_info = []
+        keys = []
+        if not prefs['devices.genn.kernel_timing']:
+            raise ValueError("No profiling info collected (need to set "
+                             "`prefs['devices.genn.kernel_timing'] = True`?)")
+        keys = ['neuronUpdateTime',
+                'presynapticUpdateTime',
+                'postsynapticUpdateTime',
+                'synapseDynamicsTime',
+                'initTime',
+                'initSparseTime']
+        with open(fname) as f:
+            # times are appended as new line in each run
+            last_line = f.read().splitlines()[-1]
+        times = last_line.split()
+        # total elapses time is always recorded
+        n_time = len(times)
+        n_key = len(keys)
+        assert n_time == n_key, (
+            f'{n_time} != {n_key} \ntimes: {times}\nkeys: {keys}'
+        )
+        for key, time in zip(keys, times):
+            net._profiling_info.append((key, float(time)*second))
+        return sorted(net._profiling_info, key=lambda item: item[1],
+                      reverse=True)
+
+
 # ------------------------------------------------------------------------------
 # End of GeNNDevice
 # ------------------------------------------------------------------------------
diff --git a/brian2genn/templates/main.cpp b/brian2genn/templates/main.cpp
index 8be3b0d..1e75fa5 100644
--- a/brian2genn/templates/main.cpp
+++ b/brian2genn/templates/main.cpp
@@ -137,6 +137,7 @@ int main(int argc, char *argv[])
   {% for kt in ('neuronUpdateTime', 'presynapticUpdateTime', 'postsynapticUpdateTime', 'synapseDynamicsTime', 'initTime', 'initSparseTime') %}
   fprintf(timef,"%f ", {{kt}});
   {% endfor %}
+  fprintf(timef,"\n");
   {% endif %} 
 
   // get the final results from the GPU 
